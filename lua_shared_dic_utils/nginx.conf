
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/plain;

    lua_shared_dict dogs 10m;

    server {
        listen       12000;
        server_name  localhost;

        location ^~ /setdic/ {
            content_by_lua '
                local mc = ngx.re.match(ngx.var.request_uri, "/setdic/([^/]+)/([^=]+)=([^/]+)", "o")
                if mc then
                    local dic = ngx.shared[mc[1]]
                    if dic then
                        dic:set(mc[2], mc[3])
                        ngx.say('ok')
                    else
                        ngx.say("dic not exist: " .. mc[1])
                    end
                else
                    ngx.say("bad url")
                end
            ';
        }
        
        location = /listdics {
            content_by_lua '
                local dics = ngx.shared
                for name,dic in pairs(dics) do
                    ngx.say(name .. ":")
                    local keys = dic:get_keys()
                    for i = 1, #keys do
                        ngx.say("    " .. keys[i] .. "=" .. dic:get(keys[i]))
                    end
                end
            ';
        }   
    }
}
